set(CMAKE_SYSTEM_NAME Generic)
set(CMAKE_SYSTEM_PROCESSOR avr)
set(CMAKE_CROSSCOMPILING 1)

function(check_program PROGRAM_NAME ENVIRONMENT_VARIABLE)
    message(CHECK_START "Finding ${PROGRAM_NAME}")
    find_program(${ENVIRONMENT_VARIABLE} ${PROGRAM_NAME})
    if (NOT ${ENVIRONMENT_VARIABLE})
        message(CHECK_FAIL "${PROGRAM_NAME} not found")
    endif()
    message(CHECK_PASS "Found avr-gcc")
endfunction(check_program PROGRAM_NAME)

cmake_language(CALL check_program "avr-gcc" "AVR_CC")
cmake_language(CALL check_program "avr-g++" "AVR_CXX")
cmake_language(CALL check_program "avr-objcopy" "AVR_OBJCOPY")
cmake_language(CALL check_program "avr-objdump" "AVR_OBJDUMP")
cmake_language(CALL check_program "avr-size" "AVR_SIZE_TOOL")
cmake_language(CALL check_program "avr-ranlib" "AVR_RANLIB")
cmake_language(CALL check_program "avr-strip" "AVR_STRIP")
cmake_language(CALL check_program "avr-nm" "AVR_NM")
cmake_language(CALL check_program "avr-ld" "AVR_LD")
cmake_language(CALL check_program "avr-ar" "AVR_AR")

# Set the compiler options
set(CMAKE_C_COMPILER ${AVR_CC})
set(CMAKE_CXX_COMPILER ${AVR_CXX})
set(CMAKE_OBJCOPY ${AVR_OBJCOPY})
set(CMAKE_SIZE_TOOL ${AVR_SIZE_TOOL})
set(CMAKE_OBJDUMP ${AVR_OBJDUMP})
set(CMAKE_RANLIB ${AVR_RANLIB})
set(CMAKE_STRIP ${AVR_STRIP})
set(CMAKE_NM ${AVR_NM})
set(CMAKE_LD ${AVR_LD})
set(CMAKE_AR ${AVR_AR})